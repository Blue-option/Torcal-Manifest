apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  project: infrastructure
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 55.5.0
    chart: kube-prometheus-stack
    helm:
      releaseName: monitoring
      values: |
        # Configuración global
        fullnameOverride: monitoring
        
        # Prometheus configuration
        prometheus:
          prometheusSpec:
            resources:
              requests:
                memory: 2Gi
                cpu: 500m
              limits:
                memory: 4Gi
                cpu: 1000m
            
            retention: 30d
            retentionSize: "10GB"
            
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: standard-rwo
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 20Gi
            
            # Service monitors adicionales
            additionalServiceMonitors:
              - name: argocd-metrics
                selector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-metrics
                namespaceSelector:
                  matchNames:
                    - argocd
                endpoints:
                  - port: metrics
              
              - name: sealed-secrets-metrics
                selector:
                  matchLabels:
                    name: sealed-secrets-controller
                namespaceSelector:
                  matchNames:
                    - kube-system
                endpoints:
                  - port: metrics
        
        # Grafana configuration
        grafana:
          adminPassword: "admin123"  # Cambiar en producción
          
          ingress:
            enabled: false  # Habilitaremos un ingress separado con cert-manager
          
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          
          persistence:
            enabled: true
            size: 5Gi
            storageClassName: standard-rwo
          
          # Dashboards predefinidos
          defaultDashboardsEnabled: true
          defaultDashboardsTimezone: Europe/Madrid
          
          # Datasources
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Prometheus
                  type: prometheus
                  url: http://monitoring-prometheus:9090
                  access: proxy
                  isDefault: true
          
          # Dashboards adicionales
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
                - name: 'default'
                  orgId: 1
                  folder: ''
                  type: file
                  disableDeletion: false
                  editable: true
                  options:
                    path: /var/lib/grafana/dashboards/default
          
          dashboards:
            default:
              argocd:
                url: https://raw.githubusercontent.com/argoproj/argo-cd/master/examples/dashboard.json
              kafka:
                url: https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/main/examples/metrics/grafana-dashboards/strimzi-kafka.json
              gpu:
                url: https://raw.githubusercontent.com/NVIDIA/gpu-operator/main/deployments/gpu-operator/assets/grafana-dashboards/nvidia-dcgm-exporter-dashboard.json
        
        # AlertManager configuration
        alertmanager:
          alertmanagerSpec:
            resources:
              requests:
                cpu: 50m
                memory: 64Mi
              limits:
                cpu: 200m
                memory: 256Mi
            
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: standard-rwo
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 2Gi
        
        # Node exporter
        nodeExporter:
          resources:
            requests:
              cpu: 50m
              memory: 30Mi
            limits:
              cpu: 200m
              memory: 100Mi
        
        # Kube-state-metrics
        kubeStateMetrics:
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
        
        # Desactivar componentes no necesarios
        kubeEtcd:
          enabled: false
        kubeControllerManager:
          enabled: false
        kubeScheduler:
          enabled: false
  
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true