
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: torcal-ml-alerts
  namespace: monitoring
  labels:
    prometheus: kube-prometheus
spec:
  groups:
  - name: torcal-ml.rules
    interval: 30s
    rules:
    # Alerta si el pod de ML está usando mucha memoria
    - alert: TorcalMLHighMemoryUsage
      expr: |
        (sum by (pod) (container_memory_working_set_bytes{namespace="torcal-ml", pod=~"torcal-ml-.*"}) 
        / sum by (pod) (kube_pod_container_resource_limits{namespace="torcal-ml", pod=~"torcal-ml-.*", resource="memory"})) > 0.9
      for: 5m
      labels:
        severity: warning
        component: torcal-ml
      annotations:
        summary: "Pod {{ $labels.pod }} tiene un uso alto de memoria"
        description: "El pod {{ $labels.pod }} está usando más del 90% de su límite de memoria."
    
    # Alerta si Kafka no está disponible
    - alert: KafkaDown
      expr: up{job="kafka", namespace="kafka-system"} == 0
      for: 2m
      labels:
        severity: critical
        component: kafka
      annotations:
        summary: "Kafka no está disponible"
        description: "El servicio de Kafka ha estado caído por más de 2 minutos."
    
    # Alerta si Neo4j no está disponible
    - alert: Neo4jDown
      expr: up{job="neo4j", namespace="torcal-ml"} == 0
      for: 2m
      labels:
        severity: critical
        component: neo4j
      annotations:
        summary: "Neo4j no está disponible"
        description: "La base de datos Neo4j ha estado caída por más de 2 minutos."
    
    # Alerta si hay pods en estado CrashLoopBackOff
    - alert: PodCrashLooping
      expr: |
        rate(kube_pod_container_status_restarts_total{namespace="torcal-ml"}[15m]) > 0
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Pod {{ $labels.pod }} está en CrashLoopBackOff"
        description: "El pod {{ $labels.pod }} se ha reiniciado {{ $value }} veces en los últimos 15 minutos."
    
    # Alerta si el GPU no está disponible cuando Ollama está activo
    - alert: GPUNotAvailable
      expr: |
        kube_pod_info{namespace="torcal-ml", pod=~"ollama-.*"} == 1 
        and on(node) nvidia_gpu_num_devices == 0
      for: 5m
      labels:
        severity: critical
        component: gpu
      annotations:
        summary: "GPU no disponible para Ollama"
        description: "Ollama está ejecutándose pero no hay GPU disponible en el nodo."
    
    # Alerta si el PVC está casi lleno
    - alert: PVCAlmostFull
      expr: |
        (kubelet_volume_stats_used_bytes{namespace="torcal-ml"} 
        / kubelet_volume_stats_capacity_bytes{namespace="torcal-ml"}) > 0.85
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "PVC {{ $labels.persistentvolumeclaim }} casi lleno"
        description: "El PVC {{ $labels.persistentvolumeclaim }} está usando más del 85% de su capacidad."