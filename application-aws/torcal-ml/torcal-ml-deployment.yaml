apiVersion: apps/v1
kind: Deployment
metadata:
  name: torcal-ml
  namespace: torcal-ml
spec:
  selector:
    matchLabels:
      app: torcal-ml
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:  
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: torcal-ml
        monitoring: "enabled"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: torcal-ml-sa
      containers:
        - name: torcal-ml
          image: 651857781455.dkr.ecr.eu-west-1.amazonaws.com/torcal-ml:latest@sha256:72180789f6cc95a1d91e1a93ecb6036c33cf5afc321430891868e6f8ea403b75
          volumeMounts:
            - name: env-config
              mountPath: /app/.env
              subPath: .env
          resources:
            limits:
              memory: "12Gi"
              cpu: "3000m"
            requests:
              memory: "8Gi"
              cpu: "2000m"
          ports:
            - containerPort: 8000
              name: http
            - containerPort: 8001
              name: metrics
          env:
            - name: OLLAMA_URL
              value: "http://ollama:11434"
            - name: MODELO_TAXONOMIA
              value: gemma3:4b
            - name: POSTGRES_HOST
              value: "postgres"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: database
            - name: NEO4J_URI
              value: "bolt://neo4j:7687"
            - name: NEO4J_USER
              valueFrom:
                secretKeyRef:
                  name: neo4j-secret
                  key: username
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: neo4j-secret
                  key: password
            - name: MINIO_ENDPOINT
              value: "minio:9000"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: root-user
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: root-password
            - name: MINIO_USE_SSL
              value: "false"
            - name: MINIO_BUCKET
              value: "torcal-models"
            - name: MINIO_DATA_BUCKET
              value: "torcal-data"
            # Enable metrics
            - name: ENABLE_METRICS
              value: "true"
            - name: METRICS_PORT
              value: "8001"
          readinessProbe:
            httpGet:
              path: /docs
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /docs
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 20
      volumes:
        - name: env-config
          configMap:
            name: torcal-ml-env-config
