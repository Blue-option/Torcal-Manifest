apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: torcal-ml
spec:
  serviceName: "postgres-headless"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        monitoring: enabled
    spec:
      serviceAccountName: postgres-sa
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        fsGroupChangePolicy: "OnRootMismatch"
      initContainers:
      - name: init-postgres-dir
        image: postgres:15
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          runAsNonRoot: true
        command:
        - /bin/bash
        - -c
        - |
          if [ ! -d "/var/lib/postgresql/data/pgdata" ]; then
            mkdir -p /var/lib/postgresql/data/pgdata
          fi
          if [ -z "$(ls -A /var/lib/postgresql/data/pgdata)" ]; then
            echo "Directory is empty, ready for initialization"
          else
            echo "Directory already contains data"
          fi
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      containers:
      - name: postgres
        image: postgres:15
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
        resources:
          limits:
            memory: "3Gi"
            cpu: "1500m"
          requests:
            memory: "512Mi"
            cpu: "250m"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_INITDB_ARGS
          value: "--data-checksums"
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        command:
        - postgres
        args:
        - -c
        - shared_buffers=768MB
        - -c
        - max_connections=50
        - -c
        - work_mem=16MB
        - -c
        - maintenance_work_mem=96MB
        - -c
        - effective_cache_size=2GB
        - -c
        - synchronous_commit=off
        - -c
        - wal_buffers=8MB
        - -c
        - max_wal_size=512MB
        - -c
        - min_wal_size=64MB
        - -c
        - random_page_cost=1.5
        - -c
        - effective_io_concurrency=4
        - -c
        - log_min_duration_statement=2000
        - -c
        - log_connections=on
        - -c
        - log_disconnections=on
        - -c
        - autovacuum_max_workers=2
        - -c
        - log_checkpoints=on
        - -c
        - log_lock_waits=on
        - -c
        - idle_in_transaction_session_timeout=30000
        - -c
        - statement_timeout=60000
        - -c
        - lock_timeout=30000
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
      storageClassName: gp3