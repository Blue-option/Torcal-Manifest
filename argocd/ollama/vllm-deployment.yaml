apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-gemma
  namespace: torcal-ml
spec:
  replicas: 1  # KEDA lo escalará
  selector:
    matchLabels:
      app: vllm-gemma
  template:
    metadata:
      labels:
        app: vllm-gemma
    spec:
      containers:
      - name: vllm
        image: vllm/vllm-openai:latest
        args:
          - "--model"
          - "google/gemma-2b"
          - "--host"
          - "0.0.0.0"
          - "--port"
          - "8000"
          - "--quantization"
          - "awq"  # Cuantización AWQ para mejor rendimiento
          - "--dtype"
          - "float16"
          - "--gpu-memory-utilization"
          - "0.9"
          - "--max-model-len"
          - "8192"
          - "--enable-lora"
          - "false"
          - "--max-num-seqs"
          - "32"
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        resources:
          limits:
            nvidia.com/gpu: 1
            memory: "12Gi"  # Reducido por la cuantización
            cpu: "8"
          requests:
            memory: "8Gi"
            cpu: "4"
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
        volumeMounts:
        - name: cache
          mountPath: /root/.cache/huggingface
        - name: shm
          mountPath: /dev/shm
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-l4
      tolerations:
      - key: "cloud.google.com/gke-accelerator"
        operator: "Equal"
        value: "present"
        effect: "NoSchedule"
      volumes:
      - name: cache
        persistentVolumeClaim:
          claimName: vllm-cache-pvc
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: "2Gi"
---


  
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vllm-cache-pvc
  namespace: torcal-ml
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi  # Suficiente para cachear el modelo
  storageClassName: standard